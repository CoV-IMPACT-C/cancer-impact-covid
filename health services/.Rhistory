scale_x_discrete(breaks = seq(11, 53, 12)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = levels(dat.plots.type$grupo.trz)[i], title = "") +
geom_vline(xintercept = 11, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 7),
plot.title = element_text(size = 8, face = "bold"))
}
g1.a <- ggarrange(plots.g1[[1]] + ggtitle("Non-specific services"),
plots.g1[[2]], plots.g1[[3]], plots.g1[[5]],
ncol = 4, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.b <- ggarrange(plots.g1[[6]] + ggtitle(levels(dat.plots.type$grp.cancer)[2]), plots.g1[[7]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.c <- ggarrange(plots.g1[[12]] + ggtitle(levels(dat.plots.type$grp.cancer)[4]), plots.g1[[11]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.d <- ggarrange(plots.g1[[8]] + ggtitle(levels(dat.plots.type$grp.cancer)[3]), plots.g1[[9]], plots.g1[[10]],
ncol = 4, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.e <- ggarrange(plots.g1[[13]] + ggtitle(levels(dat.plots.type$grp.cancer)[5]), plots.g1[[14]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.f <- ggarrange(plots.g1[[17]] + ggtitle(levels(dat.plots.type$grp.cancer)[6]), plots.g1[[16]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.bc <- ggarrange(g1.b, g1.c)
g1.ef <- ggarrange(g1.e, g1.f)
g1.type <- ggarrange(g1.a, g1.bc, g1.ef, g1.d, ncol = 1,
common.legend = T, legend = "top")
g1 <- ggarrange(g1.agg, g1.type, ncol = 1, heights = c(1, 3),
common.legend = T, legend.grob = get_legend(plots.g1[[1]]), legend = "top")
g1
ggsave(plot = g1,
filename = "output/plots/paper prestaciones fig1.pdf",
device = "pdf",
dpi = "retina",
width = 6, height = 9)
rm(g1.a, g1.b, g1.c, g1.d, g1.e, g1.f, g1.bc, g1.ef, g1.type, g1.agg)
g1
g1.agg <- dat.plots.agg %>%
filter(mod.int == "Additive") %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2018-2019")) %>%
group_by(week, year, exposicion) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion)%>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb) ) %>%
ggplot(aes(x = week, y = count, fill = exposicion))+
geom_point(alpha = .3, aes(color = exposicion), size = 1) +
geom_line(aes(x = week, y = yhat, color = exposicion, group = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, group = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_discrete(breaks = seq(5, 53, 6)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = "", title = "Total cancer-related health services") +
geom_vline(xintercept = 11, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 7),
plot.title = element_text(size = 11, face = "bold"))
plots.g1 <- list()
for (i in 1:17){
plots.g1[[i]] <- dat.plots.type %>%
filter(grupo.trz == levels(dat.plots.type$grupo.trz)[i]) %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2018-2019")) %>%
group_by(week, year, exposicion, grupo.trz) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion, grupo.trz) %>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb)) %>%
ggplot(aes(x = week, y = count, fill = exposicion))+
geom_point(alpha = .3, aes(color = exposicion), size = .5) +
geom_line(aes(x = week, y = yhat, color = exposicion, group = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, group = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_discrete(breaks = seq(11, 53, 12)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = levels(dat.plots.type$grupo.trz)[i], title = "") +
geom_vline(xintercept = 11, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 7),
plot.title = element_text(size = 8, face = "bold"))
}
g1.a <- ggarrange(plots.g1[[1]] + ggtitle("Non-specific services"),
plots.g1[[2]], plots.g1[[3]], plots.g1[[5]],
ncol = 4, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.b <- ggarrange(plots.g1[[6]] + ggtitle(levels(dat.plots.type$grp.cancer)[2]), plots.g1[[7]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.c <- ggarrange(plots.g1[[12]] + ggtitle(levels(dat.plots.type$grp.cancer)[4]), plots.g1[[11]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.d <- ggarrange(plots.g1[[8]] + ggtitle(levels(dat.plots.type$grp.cancer)[3]), plots.g1[[9]], plots.g1[[10]],
ncol = 4, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.e <- ggarrange(plots.g1[[13]] + ggtitle(levels(dat.plots.type$grp.cancer)[5]), plots.g1[[14]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.f <- ggarrange(plots.g1[[17]] + ggtitle(levels(dat.plots.type$grp.cancer)[6]), plots.g1[[16]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.bc <- ggarrange(g1.b, g1.c)
g1.ef <- ggarrange(g1.e, g1.f)
g1.type <- ggarrange(g1.a, g1.bc, g1.ef, g1.d, ncol = 1,
common.legend = T, legend = "top")
g1 <- ggarrange(g1.agg, g1.type, ncol = 1, heights = c(1, 3),
common.legend = T, legend.grob = get_legend(plots.g1[[1]]), legend = "top")
g1
ggsave(plot = g1,
filename = "output/plots/paper prestaciones fig1.pdf",
device = "pdf",
dpi = "retina",
width = 8, height = 12)
rm(g1.a, g1.b, g1.c, g1.d, g1.e, g1.f, g1.bc, g1.ef, g1.type, g1.agg)
g1
library(data.table)
library(tidyverse)
library(ggpubr)
library(haven)
dat.todos <- as.data.table(read_dta("output/DB/all cancers observed predicted counterfactual.dta"))[, cancer := "All Cancers"]
dat.mama <- as.data.table(read_dta("output/DB/Cáncer de mamas (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Breast Cancer"]
dat.test <- as.data.table(read_dta("output/DB/Cáncer de testículo (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Testicular Cancer"]
dat.cerv <- as.data.table(read_dta("output/DB/Cervix cancer (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Cervical Cancer"]
dat.colo <- as.data.table(read_dta("output/DB/Cáncer colorectal (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Colorectal Cancer"]
dat.gast <- as.data.table(read_dta("output/DB/Cáncer gástrico (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Gastric Cancer"]
dat.leuk <- as.data.table(read_dta("output/DB/Leucemia (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Leukemia"]
dat.lymp <- as.data.table(read_dta("output/DB//Linfoma (tabla con observados, predichos y contrafactual).dta"))[, cancer := "Lymphoma"]
dat <- rbind(dat.cerv, dat.colo, dat.gast, dat.leuk, dat.lymp, dat.mama, dat.test, dat.todos)
dat.todos.sex <- as.data.table(read_dta("output/DB/all cancers observed predicted counterfactual by sex.dta"))[, cancer := "All Cancers"]
dat.todos.prev <- as.data.table(read_dta("output/DB/all cancers observed predicted counterfactual by insurance 1 missing.dta"))[, cancer := "All Cancers"]
rm(dat.cerv, dat.colo, dat.gast, dat.leuk, dat.lymp, dat.mama, dat.test, dat.todos)
. <- dat[
, sexo := factor(sexo, levels = 1:2, labels = c("Male", "Female")) ][
, edad_cat := factor(rango_etario, levels = 1:7, labels = c("[20,30)", "[30,40)", "[40,50)", "[50,60)",
"[60,70)", "[70,80)", "[80,90)"))  ][
, edad_cat := relevel(edad_cat, "[40,50)")  ][
, year := as.numeric(ano)  ][
, week := as.factor(semana)  ][#ojo! estas semanas se construyeron de forma distinta: contiene 52 semanas por año en lugar de 53
, time := as.numeric(t)  ][
, pandemia := as.numeric(level)  ][
, time_after := as.numeric(slope)  ][
, count := as.numeric(`_freq`)  ][
, yhat :=  as.numeric(nhat)][
, ub :=  as.numeric(llim_nh)][
, lb :=  as.numeric(ulim_nh)][
, cf :=  as.numeric(nhat0)][
, cf_ub :=  as.numeric(llim_nh0)][
, cf_lb :=  as.numeric(ulim_nh0)][
, grupo.trz :=  as.factor(cancer)][
, .(week, year, sexo, edad_cat, count, pandemia, time, time_after, yhat, ub, lb, cf, cf_ub, cf_lb, grupo.trz) ]
dat.plots.agg <- .[grupo.trz == "All Cancers"][, -("grupo.trz")]
dat.plots.type <- droplevels.data.frame(.[grupo.trz != "All Cancers"])
dat.plots.type.sexo <- droplevels.data.frame(.[grupo.trz != "All Cancers"])
dat.plots.agg.sexo <- dat.todos.sex[
, sexo := factor(sexo, levels = 1:2, labels = c("Male", "Female")) ][
, edad_cat := factor(rango_etario, levels = 1:7, labels = c("[20,30)", "[30,40)", "[40,50)", "[50,60)",
"[60,70)", "[70,80)", "[80,90)"))  ][
, edad_cat := relevel(edad_cat, "[40,50)")  ][
, year := as.numeric(ano)  ][
, week := as.factor(semana)  ][#ojo! estas semanas se construyeron de forma distinta: contiene 52 semanas por año en lugar de 53
, time := as.numeric(t)  ][
, pandemia := as.numeric(level)  ][
, time_after := as.numeric(slope)  ][
, count := as.numeric(`_freq`)  ][
, yhat :=  as.numeric(nhat)][
, ub :=  as.numeric(llim_nh)][
, lb :=  as.numeric(ulim_nh)][
, cf :=  as.numeric(contrafactual)][
, cf_ub :=  as.numeric(llim_contra)][
, cf_lb :=  as.numeric(ulim_contra)][
, grupo.trz :=  as.factor(cancer)][
, .(week, year, sexo, edad_cat, count, pandemia, time, time_after, yhat, ub, lb, cf, cf_ub, cf_lb, grupo.trz) ]
dat.plots.agg.prev <- dat.todos.prev[
, prevision := factor(prevision, levels = 1:2, labels = c("Public", "Private")) ][
, prevision := relevel(prevision, "Private") ][
, trimester := as.factor(trimestre)  ][#ojo! estas semanas se construyeron de forma distinta: contiene 52 semanas por año en lugar de 53
, time := as.numeric(t)  ][
, pandemia := as.numeric(level)  ][
, time_after := as.numeric(slope)  ][
, count := as.numeric(`_freq`)  ][
, yhat :=  as.numeric(nhat)][
, ub :=  as.numeric(llim_nh)][
, lb :=  as.numeric(ulim_nh)][
, cf :=  as.numeric(contrafactual)][
, cf_ub :=  as.numeric(llim_contra)][
, cf_lb :=  as.numeric(ulim_contra)][
, grupo.trz :=  as.factor(cancer)][
, .(trimester, prevision, count, pandemia, time, time_after, yhat, ub, lb, cf, cf_ub, cf_lb, grupo.trz) ]
g1.agg <- dat.plots.agg %>%
#  filter(mod.int == "Additive") %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2017-2019")) %>%
group_by(week, year, exposicion) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion)%>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb) ) %>%
ggplot(aes(x = week, y = count, fill = exposicion))+
geom_point(alpha = .3, aes(color = exposicion), size = 1) +
geom_line(aes(x = week, y = yhat, color = exposicion, group = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, group = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_discrete(breaks = seq(6, 54, 6),
labels = seq(5, 53, 6)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = "", title = "Total cancer diagnostic confirmations") +
geom_vline(xintercept = 12, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 8),
plot.title = element_text(size = 11, face = "bold"))
plots.g1 <- list()
for (i in 1:7){
plots.g1[[i]] <- dat.plots.type %>%
filter(grupo.trz == levels(dat.plots.type$grupo.trz)[i]) %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2017-2019")) %>%
group_by(week, year, exposicion, grupo.trz) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion, grupo.trz) %>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb)) %>%
ggplot(aes(x = week, y = count, fill = exposicion))+
#geom_point(alpha = .3, aes(color = exposicion), size = 1) +
geom_line(aes(x = week, y = yhat, color = exposicion, group = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, group = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_discrete(breaks = seq(12, 54, 12),
labels = seq(11, 53, 12)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = levels(dat.plots.type$grupo.trz)[i], title = "") +
geom_vline(xintercept = 12, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 8),
plot.title = element_text(size = 11, face = "bold"))
}
g1.a <- ggarrange(plots.g1[[1]],
plots.g1[[2]], plots.g1[[3]], plots.g1[[4]],
ncol = 2, nrow = 2, common.legend = T, legend = "none", align = "hv")
g1 <- ggarrange(g1.agg, g1.a, ncol = 1, heights = c(1, 2),
common.legend = T, legend.grob = get_legend(plots.g1[[1]]), legend = "top")
ggsave(plot = g1,
filename = "output/plots/ges fig1.pdf",
device = "pdf",
dpi = "retina",
width = 6, height = 6)
g1
ggsave(plot = g1,
filename = "output/plots/ges fig1.pdf",
device = "pdf",
dpi = "retina",
width = 8, height = 8)
g1.agg <- dat.plots.agg %>%
#  filter(mod.int == "Additive") %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2017-2019")) %>%
group_by(week, year, exposicion) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion)%>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb) ) %>%
ggplot(aes(x = week, y = count, fill = exposicion))+
geom_point(alpha = .3, aes(color = exposicion), size = 1) +
geom_line(aes(x = week, y = yhat, color = exposicion, group = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, group = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_discrete(breaks = seq(6, 54, 6),
labels = seq(5, 53, 6)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = "", title = "Total cancer diagnostic confirmations") +
geom_vline(xintercept = 12, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 8),
plot.title = element_text(size = 11, face = "bold"))
plots.g1 <- list()
for (i in 1:7){
plots.g1[[i]] <- dat.plots.type %>%
filter(grupo.trz == levels(dat.plots.type$grupo.trz)[i]) %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2017-2019")) %>%
group_by(week, year, exposicion, grupo.trz) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion, grupo.trz) %>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb)) %>%
ggplot(aes(x = week, y = count, fill = exposicion))+
geom_point(alpha = .3, aes(color = exposicion), size = .5) +
geom_line(aes(x = week, y = yhat, color = exposicion, group = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, group = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_discrete(breaks = seq(12, 54, 12),
labels = seq(11, 53, 12)) +
theme_minimal() +
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = levels(dat.plots.type$grupo.trz)[i], title = "") +
geom_vline(xintercept = 12, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 8),
plot.title = element_text(size = 11, face = "bold"))
}
g1.a <- ggarrange(plots.g1[[1]],
plots.g1[[2]], plots.g1[[3]], plots.g1[[4]],
ncol = 2, nrow = 2, common.legend = T, legend = "none", align = "hv")
g1 <- ggarrange(g1.agg, g1.a, ncol = 1, heights = c(1, 2),
common.legend = T, legend.grob = get_legend(plots.g1[[1]]), legend = "top")
ggsave(plot = g1,
filename = "output/plots/ges fig1.pdf",
device = "pdf",
dpi = "retina",
width = 8, height = 8)
library(data.table)
library(tidyverse)
library(sjPlot)
library(ggpubr)
load(file = "output/DB/DB predichos nb sti.RData")
dat.plots.agg<-dat.plots
load(file = "output/DB/DB predichos nb sti por tipo.RData")
dat.plots.type<-dat.plots
load(file = "output/DB/DB predichos nb sti por tipo y prevision.RData")
dat.plots.type.prev<-dat.plots
load(file = "output/DB/DB predichos nb sti por tipo y sexo.RData")
dat.plots.type.sexo<-dat.plots
rm(dat.plots)
g1.agg <- dat.plots.agg %>%
mutate(week = as.numeric(week)) %>%
filter(mod.int == "Additive") %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2018-2019")) %>%
group_by(week, year, exposicion) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion)%>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb) ) %>%
ggplot(aes(x = week, y = count, fill = exposicion)) +
geom_point(alpha = .3, aes(color = exposicion), size = 1.5) +
geom_line(aes(x = week, y = yhat, color = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
theme_minimal() +
scale_x_continuous(breaks = seq(5, 53, 6)) +
theme(panel.grid.minor.x = element_blank())+
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = "", title = "Total cancer sick leaves") +
geom_vline(xintercept = 11, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 8),
plot.title = element_text(size = 11, face = "bold"))
g1.agg
plots.g1 <- list()
for (i in 1:17){
plots.g1[[i]] <- dat.plots.type %>%
filter(Cancer_type == levels(dat.plots.type$Cancer_type)[i]) %>%
mutate(week = as.numeric(week)) %>%
mutate(exposicion = ifelse(year == 2020, "2020", "2018-2019")) %>%
group_by(week, year, exposicion, Cancer_type) %>% summarise(count = sum(count),
yhat = sum(yhat),
cf = sum(cf),
ub = sum(ub),
lb = sum(lb),
cf_ub = sum(cf_ub),
cf_lb = sum(cf_lb) ) %>%
group_by(week, exposicion, Cancer_type)%>% summarise(count = mean(count),
yhat = mean(yhat),
cf = mean(cf),
ub = mean(ub),
lb = mean(lb),
cf_ub = mean(cf_ub),
cf_lb = mean(cf_lb) ) %>%
ggplot(aes(x = week, y = count, fill = exposicion)) +
geom_point(alpha = .3, aes(color = exposicion), size = .5) +
geom_line(aes(x = week, y = yhat, color = exposicion, linetype = "Observed")) +
geom_ribbon(aes(ymin = lb, ymax = ub, group = exposicion), alpha = .3) +
geom_line(aes(x = week, y = cf, color = exposicion, linetype = "Predicted counterfactual"),
size = .3, name = "bla") +
geom_ribbon(aes(ymin = cf_lb, ymax = cf_ub, group = exposicion), alpha = .15) +
scale_linetype_manual(values = c("Observed" = 1, "Predicted counterfactual" = 2)) +
ylim(0, NA) +
scale_x_continuous(breaks = seq(11, 53, 12)) +
theme_minimal() +
theme(panel.grid.minor.x = element_blank())+
labs(y = "Count", x = "Week", fill = "Period", color = "Period", linetype = "Scenario",
subtitle = paste0(levels(dat.plots.type$Cancer_type)[i], " Cancer"), title = "") +
geom_vline(xintercept = 11, linetype = "dotted", color = "red") +
theme(legend.position = "bottom",
axis.title = element_text(size = 7),
axis.text = element_text(size = 6),
plot.subtitle = element_text(size = 8),
plot.title = element_text(size = 11, face = "bold"))
}
g1.a <- ggarrange(plots.g1[[2]], plots.g1[[3]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.b <- ggarrange(plots.g1[[4]], plots.g1[[7]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.c <- ggarrange(plots.g1[[15]],
ncol = 2, nrow = 1, common.legend = T, legend = "none", align = "hv")
g1.type <- ggarrange(g1.a, g1.b, g1.c, ncol = 1,
common.legend = T, legend = "top")
g1 <- ggarrange(g1.agg, g1.type, ncol = 1, heights = c(1, 2),
common.legend = T, legend.grob = get_legend(g1.agg), legend = "top")
g1
ggsave(plot = g1,
filename = "output/plots/lme fig1.pdf",
device = "pdf",
dpi = "retina",
width = 6, height = 8)
ggsave(plot = g1,
filename = "output/plots/lme fig1.pdf",
device = "pdf",
dpi = "retina",
width = 8, height = 8)
ggsave(plot = g1,
filename = "output/plots/lme fig1.pdf",
device = "pdf",
dpi = "retina",
width = 8, height = 10)
